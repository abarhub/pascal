head 2.2;
branch ;
access ;
symbols ;
locks ; strict;
comment @ * @;


2.2
date 1996.05.07.21.14.49; author drh; state Exp;
branches ;
next 2.1;

2.1
date 1996.05.02.19.29.00; author drh; state Exp;
branches ;
next 1.2;

1.2
date 1993.03.27.11.42.21; author drh; state Exp;
branches ;
next 1.1;

1.1
date 1993.01.29.22.01.18; author drh; state Exp;
branches ;
next ;


desc
@Iburg definitions.
@



2.2
log
@Added maxcost.
@
text
@#ifndef BURG_INCLUDED
#define BURG_INCLUDED

/* $Id: iburg.h,v 2.1 1996/05/02 19:29:00 drh Exp drh $ */
/* iburg.c: */
extern void *alloc(int nbytes);

typedef enum { TERM=1, NONTERM } Kind;
typedef struct rule *Rule;
typedef struct term *Term;
struct term {		/* terminals: */
	char *name;		/* terminal name */
	Kind kind;		/* TERM */
	int esn;		/* external symbol number */
	int arity;		/* operator arity */
	Term link;		/* next terminal in esn order */
	Rule rules;		/* rules whose pattern starts with term */
};

typedef struct nonterm *Nonterm;
struct nonterm {	/* non-terminals: */
	char *name;		/* non-terminal name */
	Kind kind;		/* NONTERM */
	int number;		/* identifying number */
	int lhscount;		/* # times nt appears in a rule lhs */
	int reached;		/* 1 iff reached from start non-terminal */
	Rule rules;		/* rules w/non-terminal on lhs */
	Rule chain;		/* chain rules w/non-terminal on rhs */
	Nonterm link;		/* next terminal in number order */
};
extern Nonterm nonterm(char *id);
extern Term term(char *id, int esn);

typedef struct tree *Tree;
struct tree {		/* tree patterns: */
	void *op;		/* a terminal or non-terminal */
	Tree left, right;	/* operands */
	int nterms;		/* number of terminal nodes in this tree */
};
extern Tree tree(char *op, Tree left, Tree right);

struct rule {		/* rules: */
	Nonterm lhs;		/* lefthand side non-terminal */
	Tree pattern;		/* rule pattern */
	int ern;		/* external rule number */
	int packed;		/* packed external rule number */
	int cost;		/* associated cost */
	Rule link;		/* next rule in ern order */
	Rule next;		/* next rule with same pattern root */
	Rule chain;		/* next chain rule with same rhs */
	Rule decode;		/* next rule with same lhs */
	Rule kids;		/* next rule with same burm_kids pattern */
};
extern Rule rule(char *id, Tree pattern, int ern, int cost);
extern int maxcost;		/* maximum cost */

/* gram.y: */
void yyerror(char *fmt, ...);
int yyparse(void);
void yywarn(char *fmt, ...);
extern int errcnt;
extern FILE *infp;
extern FILE *outfp;

#endif
@


2.1
log
@*** empty log message ***
@
text
@d4 1
a4 1
/* $Id: iburg.h,v 1.2 1993/03/27 11:42:21 drh Exp drh $ */
d55 1
@


1.2
log
@Added field in trees that holds number of terminal nodes; used
in iburg.c v1.2.
@
text
@d4 1
a4 1
/* $Id: iburg.h,v 1.1 93/01/29 22:01:18 drh Exp Locker: drh $ */
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
/* $Id$ */
d36 1
a36 1
	void *op;		/* a term or non-terminal */
d38 1
@
